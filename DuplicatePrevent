write a trigger to prevent duplication of account record based on name whenever a record is inserted or updated .
here we will use before insert and before update.



trigger DuplicatePrevent on Account (before insert , before update)
{
    Set<string> accNames = new Set<string>();           //add the name of the record which is inserted and updated in a set
        if(trigger.isBefore && (trigger.isInsert || trigger.isUpdate))
        {
            if(!trigger.new.isEmpty())
            {
                for(Account acc : trigger.new)
                {
                    accNames.add(acc.Name);
                }
            }
        }
        
        List<Account> accList = [Select Id, Name from Account where Name IN : accNames];  //fatch account
        Map<String,Account> existingAccMap = new Map<String,Account>();  // here string is the key of Map and Account is the Value
    
    if(!accList.isEmpty())
    {
        for(Account acc : accList)
        {
            existingAccMap.put(acc.Name,acc);
        }
        if(!trigger.new.isEmpty())
        {
            for(Account accobj : trigger.new)
            {
                if(existingAccMap.containsKey(accobj.Name))  // to check whether the Map contains or not we have use containskey method
                {
                    accobj.Name.addError('Account Name already exist');
                }
            }
        }
    }
}      




or we can use this code also



trigger DuplicationPrevent on Account (before insert ,before update) 
{
	Set<String> accSet = new Set<String>();
    for(Account acc : trigger.new)
    {
        accSet.add(acc.Name);
    }
    
    List<Account> accList = [Select id ,Name from Account where Name IN : accSet];
    Map<String,Account> accMap = new Map<String,Account>();
    if(!accList.isEmpty())
    {
        for(Account acc :accList)
        {
           accMap.put(acc.Name , acc);
        }
    }
    if(!trigger.new.isEmpty())
    {
        for(Account acct : trigger.new)
        {
            if(accMap.containsKey(acct.Name))
            {
                acct.addError('you cant not use same name to create & update an account');
            }
        }
    }
}




This is from handler and trigger:


public class NamePrevent 
{
	public static void NameDeplicate(List<Account> accName)
    {
	Set<String> accSet = new Set<String>();
    for(Account acc : accName)
    {
        accSet.add(acc.Name);
    }
    
    List<Account> accList = [Select id ,Name from Account where Name IN : accSet];
    Map<String,Account> accMap = new Map<String,Account>();
    if(!accList.isEmpty())
    {
        for(Account acc :accList)
        {
           accMap.put(acc.Name , acc);
        }
    }
    if(!accName.isEmpty())
    {
        for(Account acct : accName)
        {
            if(accMap.containsKey(acct.Name))
            {
                acct.addError('you cant not use same name to create & update an account KHUSBU');
            }
        }
    }
}
}


trigger

trigger duplicateP on Account (before insert ,before update)
{
	NamePrevent.NameDeplicate(trigger.new);
}
